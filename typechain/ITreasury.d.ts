/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ITreasuryInterface extends ethers.utils.Interface {
  functions: {
    "depositEth()": FunctionFragment;
    "depositToken(address,uint256)": FunctionFragment;
    "refund(address,uint256)": FunctionFragment;
    "setGovernance(address)": FunctionFragment;
    "setPath(address,bytes)": FunctionFragment;
    "spend(address,uint256,address)": FunctionFragment;
    "swap(address,bytes,uint256,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "depositEth",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "depositToken",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "refund",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setGovernance",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setPath",
    values: [string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "spend",
    values: [string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "swap",
    values: [string, BytesLike, BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "depositEth", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "depositToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "refund", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setGovernance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setPath", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "spend", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "swap", data: BytesLike): Result;

  events: {};
}

export class ITreasury extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ITreasuryInterface;

  functions: {
    depositEth(overrides?: PayableOverrides): Promise<ContractTransaction>;

    "depositEth()"(overrides?: PayableOverrides): Promise<ContractTransaction>;

    depositToken(
      _token: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "depositToken(address,uint256)"(
      _token: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    refund(
      _user: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "refund(address,uint256)"(
      _user: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setGovernance(
      _governance: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setGovernance(address)"(
      _governance: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setPath(
      _token: string,
      _path: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setPath(address,bytes)"(
      _token: string,
      _path: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    spend(
      _token: string,
      _amount: BigNumberish,
      _recipient: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "spend(address,uint256,address)"(
      _token: string,
      _amount: BigNumberish,
      _recipient: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    swap(
      _token: string,
      _path: BytesLike,
      _amountIn: BigNumberish,
      _amountOutMinimum: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "swap(address,bytes,uint256,uint256)"(
      _token: string,
      _path: BytesLike,
      _amountIn: BigNumberish,
      _amountOutMinimum: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  depositEth(overrides?: PayableOverrides): Promise<ContractTransaction>;

  "depositEth()"(overrides?: PayableOverrides): Promise<ContractTransaction>;

  depositToken(
    _token: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "depositToken(address,uint256)"(
    _token: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  refund(
    _user: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "refund(address,uint256)"(
    _user: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setGovernance(
    _governance: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setGovernance(address)"(
    _governance: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setPath(
    _token: string,
    _path: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setPath(address,bytes)"(
    _token: string,
    _path: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  spend(
    _token: string,
    _amount: BigNumberish,
    _recipient: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "spend(address,uint256,address)"(
    _token: string,
    _amount: BigNumberish,
    _recipient: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  swap(
    _token: string,
    _path: BytesLike,
    _amountIn: BigNumberish,
    _amountOutMinimum: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "swap(address,bytes,uint256,uint256)"(
    _token: string,
    _path: BytesLike,
    _amountIn: BigNumberish,
    _amountOutMinimum: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    depositEth(overrides?: CallOverrides): Promise<void>;

    "depositEth()"(overrides?: CallOverrides): Promise<void>;

    depositToken(
      _token: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "depositToken(address,uint256)"(
      _token: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    refund(
      _user: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "refund(address,uint256)"(
      _user: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setGovernance(
      _governance: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setGovernance(address)"(
      _governance: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setPath(
      _token: string,
      _path: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "setPath(address,bytes)"(
      _token: string,
      _path: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    spend(
      _token: string,
      _amount: BigNumberish,
      _recipient: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "spend(address,uint256,address)"(
      _token: string,
      _amount: BigNumberish,
      _recipient: string,
      overrides?: CallOverrides
    ): Promise<void>;

    swap(
      _token: string,
      _path: BytesLike,
      _amountIn: BigNumberish,
      _amountOutMinimum: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "swap(address,bytes,uint256,uint256)"(
      _token: string,
      _path: BytesLike,
      _amountIn: BigNumberish,
      _amountOutMinimum: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    depositEth(overrides?: PayableOverrides): Promise<BigNumber>;

    "depositEth()"(overrides?: PayableOverrides): Promise<BigNumber>;

    depositToken(
      _token: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "depositToken(address,uint256)"(
      _token: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    refund(
      _user: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "refund(address,uint256)"(
      _user: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setGovernance(
      _governance: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setGovernance(address)"(
      _governance: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setPath(
      _token: string,
      _path: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setPath(address,bytes)"(
      _token: string,
      _path: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    spend(
      _token: string,
      _amount: BigNumberish,
      _recipient: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "spend(address,uint256,address)"(
      _token: string,
      _amount: BigNumberish,
      _recipient: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    swap(
      _token: string,
      _path: BytesLike,
      _amountIn: BigNumberish,
      _amountOutMinimum: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "swap(address,bytes,uint256,uint256)"(
      _token: string,
      _path: BytesLike,
      _amountIn: BigNumberish,
      _amountOutMinimum: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    depositEth(overrides?: PayableOverrides): Promise<PopulatedTransaction>;

    "depositEth()"(overrides?: PayableOverrides): Promise<PopulatedTransaction>;

    depositToken(
      _token: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "depositToken(address,uint256)"(
      _token: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    refund(
      _user: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "refund(address,uint256)"(
      _user: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setGovernance(
      _governance: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setGovernance(address)"(
      _governance: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setPath(
      _token: string,
      _path: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setPath(address,bytes)"(
      _token: string,
      _path: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    spend(
      _token: string,
      _amount: BigNumberish,
      _recipient: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "spend(address,uint256,address)"(
      _token: string,
      _amount: BigNumberish,
      _recipient: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    swap(
      _token: string,
      _path: BytesLike,
      _amountIn: BigNumberish,
      _amountOutMinimum: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "swap(address,bytes,uint256,uint256)"(
      _token: string,
      _path: BytesLike,
      _amountIn: BigNumberish,
      _amountOutMinimum: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
