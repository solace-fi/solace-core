/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MockErc20 } from "./MockErc20";

export class MockErc20Factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name: string,
    symbol: string,
    supply: BigNumberish,
    overrides?: Overrides
  ): Promise<MockErc20> {
    return super.deploy(
      name,
      symbol,
      supply,
      overrides || {}
    ) as Promise<MockErc20>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    supply: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, supply, overrides || {});
  }
  attach(address: string): MockErc20 {
    return super.attach(address) as MockErc20;
  }
  connect(signer: Signer): MockErc20Factory {
    return super.connect(signer) as MockErc20Factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockErc20 {
    return new Contract(address, _abi, signerOrProvider) as MockErc20;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e3f38038062000e3f8339810160408190526200003491620002ab565b8251839083906200004d9060039060208501906200015a565b508051620000639060049060208401906200015a565b5050506200007833826200008160201b60201c565b505050620003d3565b6001600160a01b038216620000b35760405162461bcd60e51b8152600401620000aa906200031b565b60405180910390fd5b620000c16000838362000155565b8060026000828254620000d591906200035b565b90915550506001600160a01b03821660009081526020819052604081208054839290620001049084906200035b565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906200014990859062000352565b60405180910390a35050565b505050565b828054620001689062000380565b90600052602060002090601f0160209004810192826200018c5760008555620001d7565b82601f10620001a757805160ff1916838001178555620001d7565b82800160010185558215620001d7579182015b82811115620001d7578251825591602001919060010190620001ba565b50620001e5929150620001e9565b5090565b5b80821115620001e55760008155600101620001ea565b600082601f83011262000211578081fd5b81516001600160401b03808211156200022e576200022e620003bd565b6040516020601f8401601f1916820181018381118382101715620002565762000256620003bd565b60405283825285840181018710156200026d578485fd5b8492505b8383101562000290578583018101518284018201529182019162000271565b83831115620002a157848185840101525b5095945050505050565b600080600060608486031215620002c0578283fd5b83516001600160401b0380821115620002d7578485fd5b620002e58783880162000200565b94506020860151915080821115620002fb578384fd5b506200030a8682870162000200565b925050604084015190509250925092565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200037b57634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806200039557607f821691505b60208210811415620003b757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610a5c80620003e36000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610177578063a9059cbb1461018a578063dd62ed3e1461019d576100c9565b8063395093511461014957806370a082311461015c57806395d89b411461016f576100c9565b806318160ddd116100b257806318160ddd1461010c57806323b872dd14610121578063313ce56714610134576100c9565b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d66101b0565b6040516100e391906106ff565b60405180910390f35b6100ff6100fa3660046106cb565b610242565b6040516100e391906106f4565b61011461025f565b6040516100e3919061098f565b6100ff61012f366004610690565b610265565b61013c610305565b6040516100e39190610998565b6100ff6101573660046106cb565b61030a565b61011461016a36600461063d565b610359565b6100d6610378565b6100ff6101853660046106cb565b610387565b6100ff6101983660046106cb565b610402565b6101146101ab36600461065e565b610416565b6060600380546101bf906109d5565b80601f01602080910402602001604051908101604052809291908181526020018280546101eb906109d5565b80156102385780601f1061020d57610100808354040283529160200191610238565b820191906000526020600020905b81548152906001019060200180831161021b57829003601f168201915b5050505050905090565b600061025661024f610441565b8484610445565b50600192915050565b60025490565b60006102728484846104f9565b6001600160a01b038416600090815260016020526040812081610293610441565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156102df5760405162461bcd60e51b81526004016102d690610834565b60405180910390fd5b6102fa856102eb610441565b6102f586856109be565b610445565b506001949350505050565b601290565b6000610256610317610441565b848460016000610325610441565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546102f591906109a6565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101bf906109d5565b60008060016000610396610441565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156103e25760405162461bcd60e51b81526004016102d690610932565b6103f86103ed610441565b856102f586856109be565b5060019392505050565b600061025661040f610441565b84846104f9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661046b5760405162461bcd60e51b81526004016102d6906108ee565b6001600160a01b0382166104915760405162461bcd60e51b81526004016102d690610795565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104ec90859061098f565b60405180910390a3505050565b6001600160a01b03831661051f5760405162461bcd60e51b81526004016102d690610891565b6001600160a01b0382166105455760405162461bcd60e51b81526004016102d690610752565b610550838383610621565b6001600160a01b038316600090815260208190526040902054818110156105895760405162461bcd60e51b81526004016102d6906107d7565b61059382826109be565b6001600160a01b0380861660009081526020819052604080822093909355908516815290812080548492906105c99084906109a6565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610613919061098f565b60405180910390a350505050565b505050565b80356001600160a01b038116811461037357600080fd5b60006020828403121561064e578081fd5b61065782610626565b9392505050565b60008060408385031215610670578081fd5b61067983610626565b915061068760208401610626565b90509250929050565b6000806000606084860312156106a4578081fd5b6106ad84610626565b92506106bb60208501610626565b9150604084013590509250925092565b600080604083850312156106dd578182fd5b6106e683610626565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b8181101561072b5785810183015185820160400152820161070f565b8181111561073c5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260408201527f616c616e63650000000000000000000000000000000000000000000000000000606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160408201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460408201527f6472657373000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760408201527f207a65726f000000000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b60ff91909116815260200190565b600082198211156109b9576109b9610a10565b500190565b6000828210156109d0576109d0610a10565b500390565b6002810460018216806109e957607f821691505b60208210811415610a0a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220c66e2fe75cab0c411616b829af4e1ff6bb1e3ed07836b94c479879a5e4c4092964736f6c63430008000033";
