/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface MasterInterface extends ethers.utils.Interface {
  functions: {
    "assertDepositedErc721(uint256,address,uint256)": FunctionFragment;
    "countDepositedErc721(uint256,address)": FunctionFragment;
    "createFarmErc20(address,uint256,uint256,uint256)": FunctionFragment;
    "createFarmErc721(address,address,uint256,uint256,uint256)": FunctionFragment;
    "depositErc20(uint256,uint256)": FunctionFragment;
    "depositErc721(uint256,uint256)": FunctionFragment;
    "farmInfo(uint256)": FunctionFragment;
    "farmIsErc20(uint256)": FunctionFragment;
    "farmIsErc721(uint256)": FunctionFragment;
    "getDepositedErc721At(uint256,address,uint256)": FunctionFragment;
    "getMultiplier(uint256,uint256,uint256)": FunctionFragment;
    "governance()": FunctionFragment;
    "listDepositedErc721(uint256,address)": FunctionFragment;
    "massUpdateFarms()": FunctionFragment;
    "numFarms()": FunctionFragment;
    "pendingReward(uint256,address)": FunctionFragment;
    "setFarmParams(uint256,uint256,uint256,bool)": FunctionFragment;
    "setGovernance(address)": FunctionFragment;
    "setSolacePerBlock(uint256,bool)": FunctionFragment;
    "solace()": FunctionFragment;
    "solacePerBlock()": FunctionFragment;
    "totalAllocPoints()": FunctionFragment;
    "updateFarm(uint256)": FunctionFragment;
    "userInfo(uint256,address)": FunctionFragment;
    "withdrawErc20(uint256,uint256)": FunctionFragment;
    "withdrawErc721(uint256,uint256)": FunctionFragment;
    "withdrawRewards(uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "assertDepositedErc721",
    values: [BigNumberish, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "countDepositedErc721",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "createFarmErc20",
    values: [string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "createFarmErc721",
    values: [string, string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositErc20",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositErc721",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "farmInfo",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "farmIsErc20",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "farmIsErc721",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDepositedErc721At",
    values: [BigNumberish, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getMultiplier",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "governance",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "listDepositedErc721",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "massUpdateFarms",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "numFarms", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "pendingReward",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setFarmParams",
    values: [BigNumberish, BigNumberish, BigNumberish, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setGovernance",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setSolacePerBlock",
    values: [BigNumberish, boolean]
  ): string;
  encodeFunctionData(functionFragment: "solace", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "solacePerBlock",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalAllocPoints",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "updateFarm",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "userInfo",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawErc20",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawErc721",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawRewards",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "assertDepositedErc721",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "countDepositedErc721",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createFarmErc20",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createFarmErc721",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositErc20",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositErc721",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "farmInfo", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "farmIsErc20",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "farmIsErc721",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDepositedErc721At",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "governance", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "listDepositedErc721",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "massUpdateFarms",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "numFarms", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "pendingReward",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFarmParams",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setGovernance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setSolacePerBlock",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "solace", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "solacePerBlock",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalAllocPoints",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "updateFarm", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "userInfo", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "withdrawErc20",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawErc721",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawRewards",
    data: BytesLike
  ): Result;

  events: {
    "DepositErc20(address,uint256,uint256)": EventFragment;
    "DepositErc721(address,uint256,uint256)": EventFragment;
    "Erc20FarmCreated(uint256)": EventFragment;
    "Erc721FarmCreated(uint256)": EventFragment;
    "WithdrawErc20(address,uint256,uint256)": EventFragment;
    "WithdrawErc721(address,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "DepositErc20"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DepositErc721"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Erc20FarmCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Erc721FarmCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "WithdrawErc20"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "WithdrawErc721"): EventFragment;
}

export class Master extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: MasterInterface;

  functions: {
    assertDepositedErc721(
      _farmId: BigNumberish,
      _user: string,
      _token: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "assertDepositedErc721(uint256,address,uint256)"(
      _farmId: BigNumberish,
      _user: string,
      _token: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    countDepositedErc721(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "countDepositedErc721(uint256,address)"(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    createFarmErc20(
      _token: string,
      _allocPoints: BigNumberish,
      _startBlock: BigNumberish,
      _endBlock: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "createFarmErc20(address,uint256,uint256,uint256)"(
      _token: string,
      _allocPoints: BigNumberish,
      _startBlock: BigNumberish,
      _endBlock: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    createFarmErc721(
      _token: string,
      _appraiser: string,
      _allocPoints: BigNumberish,
      _startBlock: BigNumberish,
      _endBlock: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "createFarmErc721(address,address,uint256,uint256,uint256)"(
      _token: string,
      _appraiser: string,
      _allocPoints: BigNumberish,
      _startBlock: BigNumberish,
      _endBlock: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    depositErc20(
      _farmId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "depositErc20(uint256,uint256)"(
      _farmId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    depositErc721(
      _farmId: BigNumberish,
      _token: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "depositErc721(uint256,uint256)"(
      _farmId: BigNumberish,
      _token: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    farmInfo(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      token: string;
      appraiser: string;
      allocPoints: BigNumber;
      startBlock: BigNumber;
      endBlock: BigNumber;
      lastRewardBlock: BigNumber;
      accSolacePerShare: BigNumber;
      valueStaked: BigNumber;
      0: string;
      1: string;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
    }>;

    "farmInfo(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      token: string;
      appraiser: string;
      allocPoints: BigNumber;
      startBlock: BigNumber;
      endBlock: BigNumber;
      lastRewardBlock: BigNumber;
      accSolacePerShare: BigNumber;
      valueStaked: BigNumber;
      0: string;
      1: string;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
    }>;

    farmIsErc20(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "farmIsErc20(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    farmIsErc721(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "farmIsErc721(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    getDepositedErc721At(
      _farmId: BigNumberish,
      _user: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getDepositedErc721At(uint256,address,uint256)"(
      _farmId: BigNumberish,
      _user: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getMultiplier(
      _farmId: BigNumberish,
      _from: BigNumberish,
      _to: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getMultiplier(uint256,uint256,uint256)"(
      _farmId: BigNumberish,
      _from: BigNumberish,
      _to: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    governance(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "governance()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    listDepositedErc721(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber[];
    }>;

    "listDepositedErc721(uint256,address)"(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber[];
    }>;

    massUpdateFarms(overrides?: Overrides): Promise<ContractTransaction>;

    "massUpdateFarms()"(overrides?: Overrides): Promise<ContractTransaction>;

    numFarms(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "numFarms()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    pendingReward(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "pendingReward(uint256,address)"(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    setFarmParams(
      _farmId: BigNumberish,
      _allocPoints: BigNumberish,
      _endBlock: BigNumberish,
      _withUpdate: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setFarmParams(uint256,uint256,uint256,bool)"(
      _farmId: BigNumberish,
      _allocPoints: BigNumberish,
      _endBlock: BigNumberish,
      _withUpdate: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setGovernance(
      _governance: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setGovernance(address)"(
      _governance: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setSolacePerBlock(
      _solacePerBlock: BigNumberish,
      _withUpdate: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setSolacePerBlock(uint256,bool)"(
      _solacePerBlock: BigNumberish,
      _withUpdate: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    solace(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "solace()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    solacePerBlock(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "solacePerBlock()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    totalAllocPoints(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "totalAllocPoints()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    updateFarm(
      _farmId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateFarm(uint256)"(
      _farmId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    userInfo(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<{
      value: BigNumber;
      rewardDebt: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    "userInfo(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<{
      value: BigNumber;
      rewardDebt: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    withdrawErc20(
      _farmId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "withdrawErc20(uint256,uint256)"(
      _farmId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    withdrawErc721(
      _farmId: BigNumberish,
      _token: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "withdrawErc721(uint256,uint256)"(
      _farmId: BigNumberish,
      _token: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    withdrawRewards(
      _farmId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "withdrawRewards(uint256)"(
      _farmId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  assertDepositedErc721(
    _farmId: BigNumberish,
    _user: string,
    _token: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "assertDepositedErc721(uint256,address,uint256)"(
    _farmId: BigNumberish,
    _user: string,
    _token: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  countDepositedErc721(
    _farmId: BigNumberish,
    _user: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "countDepositedErc721(uint256,address)"(
    _farmId: BigNumberish,
    _user: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  createFarmErc20(
    _token: string,
    _allocPoints: BigNumberish,
    _startBlock: BigNumberish,
    _endBlock: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "createFarmErc20(address,uint256,uint256,uint256)"(
    _token: string,
    _allocPoints: BigNumberish,
    _startBlock: BigNumberish,
    _endBlock: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  createFarmErc721(
    _token: string,
    _appraiser: string,
    _allocPoints: BigNumberish,
    _startBlock: BigNumberish,
    _endBlock: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "createFarmErc721(address,address,uint256,uint256,uint256)"(
    _token: string,
    _appraiser: string,
    _allocPoints: BigNumberish,
    _startBlock: BigNumberish,
    _endBlock: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  depositErc20(
    _farmId: BigNumberish,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "depositErc20(uint256,uint256)"(
    _farmId: BigNumberish,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  depositErc721(
    _farmId: BigNumberish,
    _token: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "depositErc721(uint256,uint256)"(
    _farmId: BigNumberish,
    _token: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  farmInfo(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    token: string;
    appraiser: string;
    allocPoints: BigNumber;
    startBlock: BigNumber;
    endBlock: BigNumber;
    lastRewardBlock: BigNumber;
    accSolacePerShare: BigNumber;
    valueStaked: BigNumber;
    0: string;
    1: string;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
    7: BigNumber;
  }>;

  "farmInfo(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    token: string;
    appraiser: string;
    allocPoints: BigNumber;
    startBlock: BigNumber;
    endBlock: BigNumber;
    lastRewardBlock: BigNumber;
    accSolacePerShare: BigNumber;
    valueStaked: BigNumber;
    0: string;
    1: string;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
    7: BigNumber;
  }>;

  farmIsErc20(arg0: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

  "farmIsErc20(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  farmIsErc721(arg0: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

  "farmIsErc721(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getDepositedErc721At(
    _farmId: BigNumberish,
    _user: string,
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getDepositedErc721At(uint256,address,uint256)"(
    _farmId: BigNumberish,
    _user: string,
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getMultiplier(
    _farmId: BigNumberish,
    _from: BigNumberish,
    _to: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getMultiplier(uint256,uint256,uint256)"(
    _farmId: BigNumberish,
    _from: BigNumberish,
    _to: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  governance(overrides?: CallOverrides): Promise<string>;

  "governance()"(overrides?: CallOverrides): Promise<string>;

  listDepositedErc721(
    _farmId: BigNumberish,
    _user: string,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "listDepositedErc721(uint256,address)"(
    _farmId: BigNumberish,
    _user: string,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  massUpdateFarms(overrides?: Overrides): Promise<ContractTransaction>;

  "massUpdateFarms()"(overrides?: Overrides): Promise<ContractTransaction>;

  numFarms(overrides?: CallOverrides): Promise<BigNumber>;

  "numFarms()"(overrides?: CallOverrides): Promise<BigNumber>;

  pendingReward(
    _farmId: BigNumberish,
    _user: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "pendingReward(uint256,address)"(
    _farmId: BigNumberish,
    _user: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  setFarmParams(
    _farmId: BigNumberish,
    _allocPoints: BigNumberish,
    _endBlock: BigNumberish,
    _withUpdate: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setFarmParams(uint256,uint256,uint256,bool)"(
    _farmId: BigNumberish,
    _allocPoints: BigNumberish,
    _endBlock: BigNumberish,
    _withUpdate: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setGovernance(
    _governance: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setGovernance(address)"(
    _governance: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setSolacePerBlock(
    _solacePerBlock: BigNumberish,
    _withUpdate: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setSolacePerBlock(uint256,bool)"(
    _solacePerBlock: BigNumberish,
    _withUpdate: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  solace(overrides?: CallOverrides): Promise<string>;

  "solace()"(overrides?: CallOverrides): Promise<string>;

  solacePerBlock(overrides?: CallOverrides): Promise<BigNumber>;

  "solacePerBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

  totalAllocPoints(overrides?: CallOverrides): Promise<BigNumber>;

  "totalAllocPoints()"(overrides?: CallOverrides): Promise<BigNumber>;

  updateFarm(
    _farmId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateFarm(uint256)"(
    _farmId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  userInfo(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<{
    value: BigNumber;
    rewardDebt: BigNumber;
    0: BigNumber;
    1: BigNumber;
  }>;

  "userInfo(uint256,address)"(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<{
    value: BigNumber;
    rewardDebt: BigNumber;
    0: BigNumber;
    1: BigNumber;
  }>;

  withdrawErc20(
    _farmId: BigNumberish,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "withdrawErc20(uint256,uint256)"(
    _farmId: BigNumberish,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  withdrawErc721(
    _farmId: BigNumberish,
    _token: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "withdrawErc721(uint256,uint256)"(
    _farmId: BigNumberish,
    _token: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  withdrawRewards(
    _farmId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "withdrawRewards(uint256)"(
    _farmId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    assertDepositedErc721(
      _farmId: BigNumberish,
      _user: string,
      _token: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "assertDepositedErc721(uint256,address,uint256)"(
      _farmId: BigNumberish,
      _user: string,
      _token: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    countDepositedErc721(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "countDepositedErc721(uint256,address)"(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    createFarmErc20(
      _token: string,
      _allocPoints: BigNumberish,
      _startBlock: BigNumberish,
      _endBlock: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "createFarmErc20(address,uint256,uint256,uint256)"(
      _token: string,
      _allocPoints: BigNumberish,
      _startBlock: BigNumberish,
      _endBlock: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    createFarmErc721(
      _token: string,
      _appraiser: string,
      _allocPoints: BigNumberish,
      _startBlock: BigNumberish,
      _endBlock: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "createFarmErc721(address,address,uint256,uint256,uint256)"(
      _token: string,
      _appraiser: string,
      _allocPoints: BigNumberish,
      _startBlock: BigNumberish,
      _endBlock: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    depositErc20(
      _farmId: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "depositErc20(uint256,uint256)"(
      _farmId: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    depositErc721(
      _farmId: BigNumberish,
      _token: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "depositErc721(uint256,uint256)"(
      _farmId: BigNumberish,
      _token: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    farmInfo(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      token: string;
      appraiser: string;
      allocPoints: BigNumber;
      startBlock: BigNumber;
      endBlock: BigNumber;
      lastRewardBlock: BigNumber;
      accSolacePerShare: BigNumber;
      valueStaked: BigNumber;
      0: string;
      1: string;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
    }>;

    "farmInfo(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      token: string;
      appraiser: string;
      allocPoints: BigNumber;
      startBlock: BigNumber;
      endBlock: BigNumber;
      lastRewardBlock: BigNumber;
      accSolacePerShare: BigNumber;
      valueStaked: BigNumber;
      0: string;
      1: string;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
    }>;

    farmIsErc20(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "farmIsErc20(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    farmIsErc721(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "farmIsErc721(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getDepositedErc721At(
      _farmId: BigNumberish,
      _user: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getDepositedErc721At(uint256,address,uint256)"(
      _farmId: BigNumberish,
      _user: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMultiplier(
      _farmId: BigNumberish,
      _from: BigNumberish,
      _to: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getMultiplier(uint256,uint256,uint256)"(
      _farmId: BigNumberish,
      _from: BigNumberish,
      _to: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    governance(overrides?: CallOverrides): Promise<string>;

    "governance()"(overrides?: CallOverrides): Promise<string>;

    listDepositedErc721(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "listDepositedErc721(uint256,address)"(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    massUpdateFarms(overrides?: CallOverrides): Promise<void>;

    "massUpdateFarms()"(overrides?: CallOverrides): Promise<void>;

    numFarms(overrides?: CallOverrides): Promise<BigNumber>;

    "numFarms()"(overrides?: CallOverrides): Promise<BigNumber>;

    pendingReward(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "pendingReward(uint256,address)"(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setFarmParams(
      _farmId: BigNumberish,
      _allocPoints: BigNumberish,
      _endBlock: BigNumberish,
      _withUpdate: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "setFarmParams(uint256,uint256,uint256,bool)"(
      _farmId: BigNumberish,
      _allocPoints: BigNumberish,
      _endBlock: BigNumberish,
      _withUpdate: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    setGovernance(
      _governance: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setGovernance(address)"(
      _governance: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setSolacePerBlock(
      _solacePerBlock: BigNumberish,
      _withUpdate: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "setSolacePerBlock(uint256,bool)"(
      _solacePerBlock: BigNumberish,
      _withUpdate: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    solace(overrides?: CallOverrides): Promise<string>;

    "solace()"(overrides?: CallOverrides): Promise<string>;

    solacePerBlock(overrides?: CallOverrides): Promise<BigNumber>;

    "solacePerBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

    totalAllocPoints(overrides?: CallOverrides): Promise<BigNumber>;

    "totalAllocPoints()"(overrides?: CallOverrides): Promise<BigNumber>;

    updateFarm(_farmId: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "updateFarm(uint256)"(
      _farmId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    userInfo(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<{
      value: BigNumber;
      rewardDebt: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    "userInfo(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<{
      value: BigNumber;
      rewardDebt: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    withdrawErc20(
      _farmId: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "withdrawErc20(uint256,uint256)"(
      _farmId: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawErc721(
      _farmId: BigNumberish,
      _token: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "withdrawErc721(uint256,uint256)"(
      _farmId: BigNumberish,
      _token: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawRewards(
      _farmId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "withdrawRewards(uint256)"(
      _farmId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    DepositErc20(
      _user: string | null,
      _farmId: BigNumberish | null,
      _amount: null
    ): EventFilter;

    DepositErc721(
      _user: string | null,
      _farmId: BigNumberish | null,
      _token: null
    ): EventFilter;

    Erc20FarmCreated(_farmId: BigNumberish | null): EventFilter;

    Erc721FarmCreated(_farmId: BigNumberish | null): EventFilter;

    WithdrawErc20(
      _user: string | null,
      _farmId: BigNumberish | null,
      _amount: null
    ): EventFilter;

    WithdrawErc721(
      _user: string | null,
      _farmId: BigNumberish | null,
      _token: null
    ): EventFilter;
  };

  estimateGas: {
    assertDepositedErc721(
      _farmId: BigNumberish,
      _user: string,
      _token: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "assertDepositedErc721(uint256,address,uint256)"(
      _farmId: BigNumberish,
      _user: string,
      _token: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    countDepositedErc721(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "countDepositedErc721(uint256,address)"(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    createFarmErc20(
      _token: string,
      _allocPoints: BigNumberish,
      _startBlock: BigNumberish,
      _endBlock: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "createFarmErc20(address,uint256,uint256,uint256)"(
      _token: string,
      _allocPoints: BigNumberish,
      _startBlock: BigNumberish,
      _endBlock: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    createFarmErc721(
      _token: string,
      _appraiser: string,
      _allocPoints: BigNumberish,
      _startBlock: BigNumberish,
      _endBlock: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "createFarmErc721(address,address,uint256,uint256,uint256)"(
      _token: string,
      _appraiser: string,
      _allocPoints: BigNumberish,
      _startBlock: BigNumberish,
      _endBlock: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    depositErc20(
      _farmId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "depositErc20(uint256,uint256)"(
      _farmId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    depositErc721(
      _farmId: BigNumberish,
      _token: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "depositErc721(uint256,uint256)"(
      _farmId: BigNumberish,
      _token: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    farmInfo(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "farmInfo(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    farmIsErc20(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "farmIsErc20(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    farmIsErc721(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "farmIsErc721(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDepositedErc721At(
      _farmId: BigNumberish,
      _user: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getDepositedErc721At(uint256,address,uint256)"(
      _farmId: BigNumberish,
      _user: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMultiplier(
      _farmId: BigNumberish,
      _from: BigNumberish,
      _to: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getMultiplier(uint256,uint256,uint256)"(
      _farmId: BigNumberish,
      _from: BigNumberish,
      _to: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    governance(overrides?: CallOverrides): Promise<BigNumber>;

    "governance()"(overrides?: CallOverrides): Promise<BigNumber>;

    listDepositedErc721(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "listDepositedErc721(uint256,address)"(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    massUpdateFarms(overrides?: Overrides): Promise<BigNumber>;

    "massUpdateFarms()"(overrides?: Overrides): Promise<BigNumber>;

    numFarms(overrides?: CallOverrides): Promise<BigNumber>;

    "numFarms()"(overrides?: CallOverrides): Promise<BigNumber>;

    pendingReward(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "pendingReward(uint256,address)"(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setFarmParams(
      _farmId: BigNumberish,
      _allocPoints: BigNumberish,
      _endBlock: BigNumberish,
      _withUpdate: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setFarmParams(uint256,uint256,uint256,bool)"(
      _farmId: BigNumberish,
      _allocPoints: BigNumberish,
      _endBlock: BigNumberish,
      _withUpdate: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setGovernance(
      _governance: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setGovernance(address)"(
      _governance: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setSolacePerBlock(
      _solacePerBlock: BigNumberish,
      _withUpdate: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setSolacePerBlock(uint256,bool)"(
      _solacePerBlock: BigNumberish,
      _withUpdate: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    solace(overrides?: CallOverrides): Promise<BigNumber>;

    "solace()"(overrides?: CallOverrides): Promise<BigNumber>;

    solacePerBlock(overrides?: CallOverrides): Promise<BigNumber>;

    "solacePerBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

    totalAllocPoints(overrides?: CallOverrides): Promise<BigNumber>;

    "totalAllocPoints()"(overrides?: CallOverrides): Promise<BigNumber>;

    updateFarm(
      _farmId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateFarm(uint256)"(
      _farmId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    userInfo(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "userInfo(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    withdrawErc20(
      _farmId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "withdrawErc20(uint256,uint256)"(
      _farmId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    withdrawErc721(
      _farmId: BigNumberish,
      _token: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "withdrawErc721(uint256,uint256)"(
      _farmId: BigNumberish,
      _token: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    withdrawRewards(
      _farmId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "withdrawRewards(uint256)"(
      _farmId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    assertDepositedErc721(
      _farmId: BigNumberish,
      _user: string,
      _token: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "assertDepositedErc721(uint256,address,uint256)"(
      _farmId: BigNumberish,
      _user: string,
      _token: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    countDepositedErc721(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "countDepositedErc721(uint256,address)"(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    createFarmErc20(
      _token: string,
      _allocPoints: BigNumberish,
      _startBlock: BigNumberish,
      _endBlock: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "createFarmErc20(address,uint256,uint256,uint256)"(
      _token: string,
      _allocPoints: BigNumberish,
      _startBlock: BigNumberish,
      _endBlock: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    createFarmErc721(
      _token: string,
      _appraiser: string,
      _allocPoints: BigNumberish,
      _startBlock: BigNumberish,
      _endBlock: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "createFarmErc721(address,address,uint256,uint256,uint256)"(
      _token: string,
      _appraiser: string,
      _allocPoints: BigNumberish,
      _startBlock: BigNumberish,
      _endBlock: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    depositErc20(
      _farmId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "depositErc20(uint256,uint256)"(
      _farmId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    depositErc721(
      _farmId: BigNumberish,
      _token: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "depositErc721(uint256,uint256)"(
      _farmId: BigNumberish,
      _token: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    farmInfo(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "farmInfo(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    farmIsErc20(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "farmIsErc20(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    farmIsErc721(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "farmIsErc721(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDepositedErc721At(
      _farmId: BigNumberish,
      _user: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getDepositedErc721At(uint256,address,uint256)"(
      _farmId: BigNumberish,
      _user: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMultiplier(
      _farmId: BigNumberish,
      _from: BigNumberish,
      _to: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getMultiplier(uint256,uint256,uint256)"(
      _farmId: BigNumberish,
      _from: BigNumberish,
      _to: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    governance(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "governance()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    listDepositedErc721(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "listDepositedErc721(uint256,address)"(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    massUpdateFarms(overrides?: Overrides): Promise<PopulatedTransaction>;

    "massUpdateFarms()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    numFarms(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "numFarms()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pendingReward(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "pendingReward(uint256,address)"(
      _farmId: BigNumberish,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setFarmParams(
      _farmId: BigNumberish,
      _allocPoints: BigNumberish,
      _endBlock: BigNumberish,
      _withUpdate: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setFarmParams(uint256,uint256,uint256,bool)"(
      _farmId: BigNumberish,
      _allocPoints: BigNumberish,
      _endBlock: BigNumberish,
      _withUpdate: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setGovernance(
      _governance: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setGovernance(address)"(
      _governance: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setSolacePerBlock(
      _solacePerBlock: BigNumberish,
      _withUpdate: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setSolacePerBlock(uint256,bool)"(
      _solacePerBlock: BigNumberish,
      _withUpdate: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    solace(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "solace()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    solacePerBlock(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "solacePerBlock()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    totalAllocPoints(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "totalAllocPoints()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    updateFarm(
      _farmId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateFarm(uint256)"(
      _farmId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    userInfo(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "userInfo(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    withdrawErc20(
      _farmId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "withdrawErc20(uint256,uint256)"(
      _farmId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    withdrawErc721(
      _farmId: BigNumberish,
      _token: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "withdrawErc721(uint256,uint256)"(
      _farmId: BigNumberish,
      _token: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    withdrawRewards(
      _farmId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "withdrawRewards(uint256)"(
      _farmId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
