/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Erc20Farm } from "./Erc20Farm";

export class Erc20FarmFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _master: string,
    _stakeToken: string,
    _rewardToken: string,
    _startBlock: BigNumberish,
    _endBlock: BigNumberish,
    overrides?: Overrides
  ): Promise<Erc20Farm> {
    return super.deploy(
      _master,
      _stakeToken,
      _rewardToken,
      _startBlock,
      _endBlock,
      overrides || {}
    ) as Promise<Erc20Farm>;
  }
  getDeployTransaction(
    _master: string,
    _stakeToken: string,
    _rewardToken: string,
    _startBlock: BigNumberish,
    _endBlock: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _master,
      _stakeToken,
      _rewardToken,
      _startBlock,
      _endBlock,
      overrides || {}
    );
  }
  attach(address: string): Erc20Farm {
    return super.attach(address) as Erc20Farm;
  }
  connect(signer: Signer): Erc20FarmFactory {
    return super.connect(signer) as Erc20FarmFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Erc20Farm {
    return new Contract(address, _abi, signerOrProvider) as Erc20Farm;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_master",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "accRewardPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blockReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "farmType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRewardBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "master",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endBlock",
        type: "uint256",
      },
    ],
    name: "setEnd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    name: "setGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockReward",
        type: "uint256",
      },
    ],
    name: "setRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateFarm",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unpaidRewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "valueStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052606560005534801561001557600080fd5b5060405162000f6038038062000f60833981016040819052610036916100e8565b600b80546001600160a01b03199081166001600160a01b0388811691909117909255600180548216878416179055600280549091169185169190911790556004829055600581905561009343836100b3602090811b61075917901c565b6006555050600a80546001600160a01b031916331790555061013d915050565b6000818310156100c357816100c5565b825b9392505050565b80516001600160a01b03811681146100e357600080fd5b919050565b600080600080600060a086880312156100ff578081fd5b610108866100cc565b9450610116602087016100cc565b9350610124604087016100cc565b6060870151608090970151959894975095949392505050565b610e13806200014d6000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c80637f498ffc116100d8578063b6b55f251161008c578063ee97f7f311610066578063ee97f7f314610298578063f54ca63c146102a0578063f7c618c1146102a857610177565b8063b6b55f251461026a578063c7a29c6f1461027d578063c7b8981c1461029057610177565b8063939d6237116100bd578063939d623714610247578063a9f8d1811461024f578063ab033ea91461025757610177565b80637f498ffc146102215780638dbb1e3a1461023457610177565b806331d7a2621161012f57806351ed6a301161011457806351ed6a30146101fc5780635aa6e675146102115780636ae5b46a1461021957610177565b806331d7a262146101e157806348cd4cb1146101f457610177565b80631959a002116101605780631959a002146101a25780632e1a7d4d146101c45780632ebed9ec146101d957610177565b8063083c63231461017c5780630ac168a11461019a575b600080fd5b6101846102b0565b6040516101919190610d0e565b60405180910390f35b6101846102b6565b6101b56101b0366004610ad4565b6102bc565b60405161019193929190610d17565b6101d76101d2366004610b1b565b6102dd565b005b6101846103a7565b6101846101ef366004610ad4565b6103ad565b61018461045e565b610204610464565b6040516101919190610b88565b610204610473565b610184610482565b6101d761022f366004610b1b565b610488565b610184610242366004610b4b565b6104c8565b61018461051e565b610184610524565b6101d7610265366004610ad4565b61052a565b6101d7610278366004610b1b565b61058e565b6101d761028b366004610b1b565b610645565b6101d761067c565b6102046106ba565b6101d76106c9565b61020461074a565b60055481565b60035481565b60096020526000908152604090208054600182015460029092015490919083565b6102e5610772565b3360009081526009602052604081206008805491928492610307908490610d84565b9091555050805482908290600090610320908490610d84565b9091555050600754815464e8d4a510009161033a91610d65565b6103449190610d45565b60018083019190915554610362906001600160a01b031633846108a5565b336001600160a01b03167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243648360405161039b9190610d0e565b60405180910390a25050565b60005481565b6001600160a01b0381166000908152600960205260408120600754600654431180156103da575060085415155b1561041a5760006103ed600654436104c8565b6008549091506104028264e8d4a51000610d65565b61040c9190610d45565b6104169083610d2d565b9150505b60028201546001830154835464e8d4a5100090610438908590610d65565b6104429190610d45565b61044c9190610d84565b6104569190610d2d565b949350505050565b60045481565b6001546001600160a01b031681565b600a546001600160a01b031681565b60085481565b600a546001600160a01b031633146104bb5760405162461bcd60e51b81526004016104b290610c0c565b60405180910390fd5b6104c36106c9565b600555565b6000806104d784600454610759565b905060006104e78460055461092d565b9050808211156104fc57600092505050610518565b6003546105098383610d84565b6105139190610d65565b925050505b92915050565b60075481565b60065481565b600a546001600160a01b031633146105545760405162461bcd60e51b81526004016104b290610c0c565b600a80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b610596610772565b33600081815260096020526040902060015490916105bf916001600160a01b031690308561093c565b81600860008282546105d19190610d2d565b90915550508054829082906000906105ea908490610d2d565b9091555050600754815464e8d4a510009161060491610d65565b61060e9190610d45565b600182015560405133907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9061039b908590610d0e565b600b546001600160a01b0316331461066f5760405162461bcd60e51b81526004016104b290610cd7565b6106776106c9565b600355565b610684610772565b336000908152600960205260409020600754815464e8d4a51000916106a891610d65565b6106b29190610d45565b600190910155565b600b546001600160a01b031681565b60065443116106d757610748565b6008546106f2576106ea4360055461092d565b600655610748565b6000610700600654436104c8565b6008549091506107158264e8d4a51000610d65565b61071f9190610d45565b600760008282546107309190610d2d565b925050819055506107434360055461092d565b600655505b565b6002546001600160a01b031681565b600081831015610769578161076b565b825b9392505050565b61077a6106c9565b33600090815260096020526040812060028101546001820154600754835493949364e8d4a51000916107ab91610d65565b6107b59190610d45565b6107bf9190610d84565b6107c99190610d2d565b9050806107d7575050610748565b600254600b546040516370a0823160e01b81526000926001600160a01b03908116926370a082319261080f9290911690600401610b88565b60206040518083038186803b15801561082757600080fd5b505afa15801561083b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085f9190610b33565b9050600061086d838361092d565b90506108798184610d84565b600280860191909155600b54905461089f916001600160a01b039182169116338461093c565b50505050565b6109288363a9059cbb60e01b84846040516024016108c4929190610bc0565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261095d565b505050565b6000818310610769578161076b565b61089f846323b872dd60e01b8585856040516024016108c493929190610b9c565b60006109b2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166109ec9092919063ffffffff16565b80519091501561092857808060200190518101906109d09190610afb565b6109285760405162461bcd60e51b81526004016104b290610c7a565b6060610456848460008585610a0085610a95565b610a1c5760405162461bcd60e51b81526004016104b290610c43565b600080866001600160a01b03168587604051610a389190610b6c565b60006040518083038185875af1925050503d8060008114610a75576040519150601f19603f3d011682016040523d82523d6000602084013e610a7a565b606091505b5091509150610a8a828286610a9b565b979650505050505050565b3b151590565b60608315610aaa57508161076b565b825115610aba5782518084602001fd5b8160405162461bcd60e51b81526004016104b29190610bd9565b600060208284031215610ae5578081fd5b81356001600160a01b038116811461076b578182fd5b600060208284031215610b0c578081fd5b8151801515811461076b578182fd5b600060208284031215610b2c578081fd5b5035919050565b600060208284031215610b44578081fd5b5051919050565b60008060408385031215610b5d578081fd5b50508035926020909101359150565b60008251610b7e818460208701610d9b565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6000602082528251806020840152610bf8816040850160208701610d9b565b601f01601f19169190910160400192915050565b6020808252600b908201527f21676f7665726e616e6365000000000000000000000000000000000000000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b60208082526007908201527f216d617374657200000000000000000000000000000000000000000000000000604082015260600190565b90815260200190565b9283526020830191909152604082015260600190565b60008219821115610d4057610d40610dc7565b500190565b600082610d6057634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610d7f57610d7f610dc7565b500290565b600082821015610d9657610d96610dc7565b500390565b60005b83811015610db6578181015183820152602001610d9e565b8381111561089f5750506000910152565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220f89bc5cb1fde872921be23f23d7f6e7b1482262ecf16ce6a483f9e3b7f5155ce64736f6c63430008000033";
